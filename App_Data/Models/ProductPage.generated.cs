//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.7.99
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Linq.Expressions;
using System.Web;
using Umbraco.Core.Models;
using Umbraco.Core.Models.PublishedContent;
using Umbraco.Web;
using Umbraco.ModelsBuilder;
using Umbraco.ModelsBuilder.Umbraco;

namespace Umbraco.Web.PublishedContentModels
{
	/// <summary>Товар</summary>
	[PublishedContentModel("ProductPage")]
	public partial class ProductPage : PublishedContentModel, IBasicInfoComponent, ILangComponent, INavigationComponent, ISeoComponent
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "ProductPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ProductPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ProductPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Описание
		///</summary>
		[ImplementPropertyType("description")]
		public IEnumerable<IPublishedContent> Description
		{
			get { return this.GetPropertyValue<IEnumerable<IPublishedContent>>("description"); }
		}

		///<summary>
		/// Доступна гравировка
		///</summary>
		[ImplementPropertyType("engraving")]
		public bool Engraving
		{
			get { return this.GetPropertyValue<bool>("engraving"); }
		}

		///<summary>
		/// Стоимость гравировки: (если не указанно используется значение по умолчанию)
		///</summary>
		[ImplementPropertyType("engravingCost")]
		public string EngravingCost
		{
			get { return this.GetPropertyValue<string>("engravingCost"); }
		}

		///<summary>
		/// Бренд\Тип
		///</summary>
		[ImplementPropertyType("filter")]
		public nuPickers.Picker Filter
		{
			get { return this.GetPropertyValue<nuPickers.Picker>("filter"); }
		}

		///<summary>
		/// В наличии
		///</summary>
		[ImplementPropertyType("inStock")]
		public bool InStock
		{
			get { return this.GetPropertyValue<bool>("inStock"); }
		}

		///<summary>
		/// Фото
		///</summary>
		[ImplementPropertyType("photos")]
		public IEnumerable<IPublishedContent> Photos
		{
			get { return this.GetPropertyValue<IEnumerable<IPublishedContent>>("photos"); }
		}

		///<summary>
		/// Цена
		///</summary>
		[ImplementPropertyType("price")]
		public string Price
		{
			get { return this.GetPropertyValue<string>("price"); }
		}

		///<summary>
		/// Товары
		///</summary>
		[ImplementPropertyType("seeAlso")]
		public IEnumerable<IPublishedContent> SeeAlso
		{
			get { return this.GetPropertyValue<IEnumerable<IPublishedContent>>("seeAlso"); }
		}

		///<summary>
		/// Миниатюра: 260 × 390
		///</summary>
		[ImplementPropertyType("thumbnail")]
		public IPublishedContent Thumbnail
		{
			get { return this.GetPropertyValue<IPublishedContent>("thumbnail"); }
		}

		///<summary>
		/// Имя в навигации: Название ссылки на страницу в навигационных элементах
		///</summary>
		[ImplementPropertyType("navTitle")]
		public string NavTitle
		{
			get { return Umbraco.Web.PublishedContentModels.BasicInfoComponent.GetNavTitle(this); }
		}

		///<summary>
		/// Заголовок страницы: Переопределяет заголовок страницы в браузере (желательно не более 70 символов)
		///</summary>
		[ImplementPropertyType("title")]
		public string Title
		{
			get { return Umbraco.Web.PublishedContentModels.BasicInfoComponent.GetTitle(this); }
		}

		///<summary>
		/// Связанные страницы
		///</summary>
		[ImplementPropertyType("linkedPages")]
		public IEnumerable<IPublishedContent> LinkedPages
		{
			get { return Umbraco.Web.PublishedContentModels.LangComponent.GetLinkedPages(this); }
		}

		///<summary>
		/// Скрыть из навигации
		///</summary>
		[ImplementPropertyType("umbracoNaviHide")]
		public bool UmbracoNaviHide
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationComponent.GetUmbracoNaviHide(this); }
		}

		///<summary>
		/// Перенаправление
		///</summary>
		[ImplementPropertyType("umbracoRedirect")]
		public string UmbracoRedirect
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationComponent.GetUmbracoRedirect(this); }
		}

		///<summary>
		/// Альтернативный Url
		///</summary>
		[ImplementPropertyType("umbracoUrlName")]
		public string UmbracoUrlName
		{
			get { return Umbraco.Web.PublishedContentModels.NavigationComponent.GetUmbracoUrlName(this); }
		}

		///<summary>
		/// Meta - Description
		///</summary>
		[ImplementPropertyType("metaDescription")]
		public string MetaDescription
		{
			get { return Umbraco.Web.PublishedContentModels.SeoComponent.GetMetaDescription(this); }
		}

		///<summary>
		/// Meta - Keywords
		///</summary>
		[ImplementPropertyType("metaKeywords")]
		public string MetaKeywords
		{
			get { return Umbraco.Web.PublishedContentModels.SeoComponent.GetMetaKeywords(this); }
		}

		///<summary>
		/// Изображение для соц. сетей: Изображение которое будет предложено для парсера соц. сетей и месенджеров.
		///</summary>
		[ImplementPropertyType("shareUrlImage")]
		public IPublishedContent ShareUrlImage
		{
			get { return Umbraco.Web.PublishedContentModels.SeoComponent.GetShareUrlImage(this); }
		}
	}
}
